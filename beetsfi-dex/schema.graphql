# Vault
type Vault @entity {
  id: ID!
}

type Token @entity {
  # token address
  id: ID!

  # mirrored from the smart contract
  symbol: String!
  name: String!
  decimals: Int!
}

type Transaction @entity {
  id: ID! # txn hash
  blockNumber: BigInt!
  timestamp: BigInt!
}

type Swap @entity {
  # transaction hash + "-" + log index
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!

  poolId: Pool!
  from: Bytes!
  tokenIn: Token!
  tokenOut: Token!
  tokenAmountIn: BigDecimal!
  tokenAmountOut: BigDecimal!
  balanceIn: BigDecimal!
  balanceOut: BigDecimal!
  poolTokenBalances: [BigDecimal!]!
  logIndex: BigInt!
}

type Pool @entity {
  id: ID!
  address: Bytes!
  poolType: String
  factory: Bytes
  strategyType: Int!
  createTime: Int!
  tokensList: [Bytes!]!
  tokens: [PoolToken!] @derivedFrom(field: "poolId")
  swaps: [Swap!] @derivedFrom(field: "poolId")
}

type PoolToken @entity {
  id: ID!
  poolId: Pool!
  token: Token!
  address: String!
  balance: BigDecimal!

  # WeightedPool Only
  weight: BigDecimal
}