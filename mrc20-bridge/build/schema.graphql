type AddToken @entity(immutable: true) {
  id: Bytes!
  addr: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Claim @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  txId: BigInt! # uint256
  fromChain: BigInt! # uint256
  amount: BigInt! # uint256
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Deposit @entity(immutable: true) {
  id: Bytes!
  txId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleAdminChanged @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  previousAdminRole: Bytes! # bytes32
  newAdminRole: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleGranted @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleRevoked @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BridgeEntity @entity {
  id: Bytes!
  blockNo: BigInt!
  txHash: Bytes!
  blockHash: Bytes!
  time: BigInt!
  txId: BigInt!
  tokenId: BigInt!
  fromChain: BigInt!
  toChain: BigInt!
  claimedChain:BigInt!
  user: Bytes!
  amount: BigInt!
  tokenAddress: Bytes!
  deposited: Boolean!
  claimed: Boolean!
}
